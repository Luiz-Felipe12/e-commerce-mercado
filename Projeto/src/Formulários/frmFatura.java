 
package Formulários;

import Classes.Dados;
import Classes.Informações;
import Classes.Opções;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import sun.swing.table.DefaultTableCellHeaderRenderer;
/**
 * @author David Cavalcanti
 * Este é o formulario para a realização de uma venda.
 * Codigo dos botões: Adicionar e excluir produto, Salvar venda, escolher produtos,quantidades e clientes
 * Além do código para o preenchimento da tabela com os produtos escolhidos.
 */

public class frmFatura extends javax.swing.JInternalFrame {
  
    private DefaultTableModel userTable;
    private Dados clsDados;
    
    public void setDados(Dados clsDados){
        this.clsDados=clsDados;
    }
    public frmFatura() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtQuantidade = new javax.swing.JTextField();
        comboBoxProduto = new javax.swing.JComboBox<>();
        comboBoxCliente = new javax.swing.JComboBox<>();
        txtData = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDetalhes = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtQuantTotal = new javax.swing.JTextField();
        txtValor = new javax.swing.JTextField();
        bntAdicionar = new javax.swing.JButton();
        bntSalvar1 = new javax.swing.JButton();
        bntDeletarAll = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Formulario de Vendas");
        setEnabled(false);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 255));
        jLabel2.setText("Data:");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 255));
        jLabel3.setText("Cliente:");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 255));
        jLabel4.setText("Produto:");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 255));
        jLabel5.setText("Quantidade:");

        txtQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantidadeActionPerformed(evt);
            }
        });

        txtData.setEnabled(false);
        txtData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataActionPerformed(evt);
            }
        });

        tblDetalhes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblDetalhes);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("TOTAL:");

        txtQuantTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtQuantTotal.setDisabledTextColor(new java.awt.Color(204, 0, 0));
        txtQuantTotal.setEnabled(false);
        txtQuantTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantTotalActionPerformed(evt);
            }
        });

        txtValor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtValor.setDisabledTextColor(new java.awt.Color(204, 0, 0));
        txtValor.setEnabled(false);
        txtValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorActionPerformed(evt);
            }
        });

        bntAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/icones/adiconar.png"))); // NOI18N
        bntAdicionar.setToolTipText("Nova Venda");
        bntAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntAdicionarActionPerformed(evt);
            }
        });

        bntSalvar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/icones/file.png"))); // NOI18N
        bntSalvar1.setToolTipText("Salvar Venda");
        bntSalvar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntSalvar1ActionPerformed(evt);
            }
        });

        bntDeletarAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/icones/deletar todos.png"))); // NOI18N
        bntDeletarAll.setToolTipText("Apagar Todas As Vendas");
        bntDeletarAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntDeletarAllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtQuantidade))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(30, 30, 30)
                                .addComponent(comboBoxProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(comboBoxCliente, 0, 177, Short.MAX_VALUE)
                                    .addComponent(txtData))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtQuantTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 607, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(bntDeletarAll)
                        .addComponent(bntAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(bntSalvar1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(240, 240, 240))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(bntAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(comboBoxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(comboBoxProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(bntDeletarAll)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bntSalvar1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(107, 107, 107)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtQuantTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantidadeActionPerformed

    private void txtDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataActionPerformed

    private void txtQuantTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantTotalActionPerformed

    private void txtValorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorActionPerformed

    private void bntAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntAdicionarActionPerformed
        // Codigo do botão adicionar
        if(comboBoxProduto.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(rootPane, "SELECIONE UM PRODUTO PARA PROSSEGUIR COM A VENDA");
            comboBoxProduto.requestFocusInWindow();
            return;
        }
        if(txtQuantidade.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "SELECIONE A QUANTIDADE PARA PROSSEGUIR COM A VENDA");
            txtQuantidade.requestFocusInWindow();
            return;
        }
        if(!Informações.isNumeric(txtQuantidade.getText())){
            JOptionPane.showMessageDialog(rootPane, "DIGITE UM VALOR VALIDO");
            txtQuantidade.setText("");
            txtQuantidade.requestFocusInWindow();
            return;
        }
           int quantidade=Integer.parseInt(txtQuantidade.getText());
           if(quantidade<=0){
           JOptionPane.showMessageDialog(rootPane, "DIGITE UM VALOR VALIDO MAIOR QUE 0");
           txtQuantidade.setText("");
           txtQuantidade.requestFocusInWindow();
           return;
        }
        int pos=comboBoxProduto.getSelectedIndex() - 1;
        String registro[]= new String[5];
        registro[0]=clsDados.getProdutos()[pos].getCodProduto();
        registro[1]=clsDados.getProdutos()[pos].getDescrição();
        registro[2]=""+clsDados.getProdutos()[pos].getPreço();
        registro[3]=""+quantidade;
        registro[4]=""+(quantidade*clsDados.getProdutos()[pos].getPreço());
        userTable.addRow(registro);
        
        comboBoxProduto.setSelectedIndex(0);
        txtQuantidade.setText("");
        comboBoxProduto.requestFocusInWindow();
        totais();
        

    }//GEN-LAST:event_bntAdicionarActionPerformed

    private void bntSalvar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntSalvar1ActionPerformed
    //Codigo do botão salvar .
        if(comboBoxCliente.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(rootPane, "SELECIONE UM CLIENTE PARA PROSSEGUIR COM A COMPRA");
            comboBoxCliente.requestFocusInWindow();
            return;
        }
        int totalQuant= new Integer(txtQuantTotal.getText());
        if(totalQuant==0){
            JOptionPane.showMessageDialog(rootPane, "SELECIONE UM PRODUTO PARA SALVAR A COMPRA");
            comboBoxProduto.requestFocusInWindow();
            return;
        }
        int del=JOptionPane.showConfirmDialog(rootPane, "DESEJA COMCLUIR A COMPRA?");
        if(del!=0){
            return;
        }
        int contVendas=clsDados.getContVendas()+1;
            FileWriter fw= null;
            PrintWriter pw=null;
            try {
                fw=new FileWriter("Data/Vendas.txt",true);
                pw=new PrintWriter(fw);
                String cli=(String) comboBoxCliente.getSelectedItem();
                String aux="1|"+contVendas+"|"+cli+"|"+
                       txtData.getText();
                pw.println(aux);
           
                
                int num=tblDetalhes.getRowCount();
               
                for(int i=0;i<num;i++){
                    aux="2|"
                    + Informações.objectToString(tblDetalhes.getValueAt(i,0)) +"|"
                    + Informações.objectToString(tblDetalhes.getValueAt(i,1)) +"|"
                    + Informações.objectToString(tblDetalhes.getValueAt(i,2)) +"|"
                    + Informações.objectToString(tblDetalhes.getValueAt(i,3)) +"|"
                    + Informações.objectToString(tblDetalhes.getValueAt(i,4));
                    
                    pw.println(aux);
                 }
                
            } catch (Exception e1) {
                e1.printStackTrace();
             }finally{
                try {
                    if(fw!=null){
                    fw.close();
                }
                    } catch (Exception e2) {
                    e2.printStackTrace();
            }
        }
            JOptionPane.showMessageDialog(rootPane, "VENDA: "+contVendas+" VENDA REALIZADA COM SUCESSO");
            clsDados.setContVendas(contVendas);
            comboBoxCliente.setSelectedIndex(0);
            limparTabela();
            totais();
            comboBoxCliente.requestFocusInWindow();
    }//GEN-LAST:event_bntSalvar1ActionPerformed

    //seleciona clientes e produtos no formulario 
    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        Opções opc= new Opções("", "SELECIONE UM CLIENTE");
        comboBoxCliente.addItem(opc.toString());
        for(int i=0;i<clsDados.numeroClientes();i++){
            opc=new Opções(clsDados.getClientes()[i].getCodCliente(),clsDados.getClientes()[i].getNomeCliente()+" "+clsDados.getClientes()[i].getSobrenomeCliente());
            comboBoxCliente.addItem(opc.toString());
        }
        
       opc= new Opções("", "SELECIONE UM PRODUTO");
        comboBoxProduto.addItem(opc.toString());
        for(int i=0;i<clsDados.numeroProdutos();i++){
            opc=new Opções(clsDados.getProdutos()[i].getCodProduto(),clsDados.getProdutos()[i].getDescrição());
            comboBoxProduto.addItem(opc.toString());
        }
        txtData.setText(Informações.formatDate(new Date()));
        txtQuantTotal.setText("0");
        txtValor.setText("0");
        carregarTable();
        
    }//GEN-LAST:event_formInternalFrameOpened

    private void bntDeletarAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntDeletarAllActionPerformed
        // Codigo do botão apagar tudo:
         int del=JOptionPane.showConfirmDialog(rootPane, "Deseja realmente deletar essa venda?");
        if(del!=0){
            return;
        }
        limparTabela();
        totais();
    }//GEN-LAST:event_bntDeletarAllActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntAdicionar;
    private javax.swing.JButton bntDeletarAll;
    private javax.swing.JButton bntSalvar1;
    private javax.swing.JComboBox<String> comboBoxCliente;
    private javax.swing.JComboBox<String> comboBoxProduto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDetalhes;
    private javax.swing.JTextField txtData;
    private javax.swing.JTextField txtQuantTotal;
    private javax.swing.JTextField txtQuantidade;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables

 private void carregarTable(){
         String tituloCabeçalho[]={"COD.PRODUTO","DESCRIÇÃO","PREÇO","QUANT.","VALOR"};
         String registro[]=new String[5];
         userTable= new DefaultTableModel(null,tituloCabeçalho);
         tblDetalhes.setModel(userTable);    
         
         DefaultTableCellRenderer dtcr= new DefaultTableCellRenderer();
         dtcr.setHorizontalAlignment(SwingConstants.RIGHT);
         tblDetalhes.getColumnModel().getColumn(2).setCellRenderer(dtcr);
         tblDetalhes.getColumnModel().getColumn(3).setCellRenderer(dtcr);
         tblDetalhes.getColumnModel().getColumn(4).setCellRenderer(dtcr);
    
     }
 private void totais(){
     int num=tblDetalhes.getRowCount();
     int somaQuant=0;
     int somaValor=0;
     
     for(int i=0;i<num;i++){
         somaQuant +=Informações.objecToInt(tblDetalhes.getValueAt(i,3));
         somaValor +=Informações.objecToInt(tblDetalhes.getValueAt(i,4));
     }
     txtQuantTotal.setText(""+somaQuant);
     txtValor.setText(""+somaValor);
 }
 
 public void limparTabela(){
     try {
         DefaultTableModel modelo=(DefaultTableModel)tblDetalhes.getModel();
         int linha=tblDetalhes.getRowCount();
         for (int i = 0;linha>i; i++) {
             modelo.removeRow(0);   
         }
         
     } catch (Exception e) {
         e.printStackTrace();
     }
 }

}
